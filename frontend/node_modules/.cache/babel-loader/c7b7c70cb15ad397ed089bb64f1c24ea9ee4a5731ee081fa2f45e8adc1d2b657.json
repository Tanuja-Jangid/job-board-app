{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Downloads\\\\job-board-app\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [applications, setApplications] = useState([]);\n  const [showApplications, setShowApplications] = useState(false);\n  const [form, setForm] = useState({\n    title: \"\",\n    description: \"\",\n    location: \"\",\n    salary: \"\",\n    status: \"Active\"\n  });\n  const [editId, setEditId] = useState(null);\n  const navigate = useNavigate();\n  const fetchJobs = async () => {\n    try {\n      const res = await API.get(\"/jobs/\");\n      setJobs(res.data);\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        navigate(\"/login\");\n      }\n    }\n  };\n  const fetchApplications = async () => {\n    try {\n      const res = await API.get(\"/applications/all-applications/\");\n      setApplications(res.data);\n    } catch (err) {\n      console.error(\"❌ Failed to fetch applications:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      ...form,\n      salary: parseFloat(form.salary)\n    };\n    try {\n      if (editId) {\n        await API.put(`/jobs/${editId}/`, payload);\n        setEditId(null);\n      } else {\n        await API.post(\"/jobs/\", payload);\n      }\n      setForm({\n        title: \"\",\n        description: \"\",\n        location: \"\",\n        salary: \"\",\n        status: \"Active\"\n      });\n      fetchJobs();\n    } catch (err) {\n      alert(editId ? \"Failed to update job\" : \"Failed to add job\");\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await API.delete(`/jobs/${id}`);\n      fetchJobs();\n    } catch (err) {\n      alert(\"Failed to delete job\");\n    }\n  };\n  const handleEdit = job => {\n    setEditId(job.id);\n    setForm({\n      title: job.title,\n      description: job.description,\n      location: job.location,\n      salary: job.salary,\n      status: job.status\n    });\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  const handleCancelEdit = () => {\n    setEditId(null);\n    setForm({\n      title: \"\",\n      description: \"\",\n      location: \"\",\n      salary: \"\",\n      status: \"Active\"\n    });\n  };\n  const toggleApplications = async () => {\n    const newShowState = !showApplications;\n    setShowApplications(newShowState);\n    if (newShowState) {\n      await fetchApplications();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.container,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: styles.heading,\n      children: \"\\uD83D\\uDEE0\\uFE0F Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.formContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.sectionHeading,\n        children: editId ? \"✏️ Edit Job\" : \"➕ Add New Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        style: styles.form,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"title\",\n          value: form.title,\n          onChange: handleChange,\n          placeholder: \"Job Title\",\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"description\",\n          value: form.description,\n          onChange: handleChange,\n          placeholder: \"Job Description\",\n          required: true,\n          rows: \"3\",\n          style: styles.textarea\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          name: \"location\",\n          value: form.location,\n          onChange: handleChange,\n          placeholder: \"Location\",\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          name: \"salary\",\n          value: form.salary,\n          onChange: handleChange,\n          placeholder: \"Salary (\\u20B9)\",\n          required: true,\n          style: styles.input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"status\",\n          value: form.status,\n          onChange: handleChange,\n          style: styles.input,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Active\",\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Closed\",\n            children: \"Closed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            display: \"flex\",\n            gap: \"1rem\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            style: styles.primaryButton,\n            children: editId ? \"Update Job\" : \"Add Job\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this), editId && /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: handleCancelEdit,\n            style: styles.secondaryButton,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      style: styles.sectionHeading,\n      children: \"\\uD83D\\uDCCB All Job Listings\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.cardGrid,\n      children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          style: styles.jobTitle,\n          children: job.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCCD Location:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 16\n          }, this), \" \", job.location]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCB0 Salary:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 16\n          }, this), \" \\u20B9\", job.salary]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"\\uD83D\\uDCCC Status:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 16\n          }, this), \" \", job.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            marginTop: \"0.5rem\"\n          },\n          children: job.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.buttonGroup,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(job),\n            style: styles.smallButton,\n            children: \"\\u270F\\uFE0F Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(job.id),\n            style: styles.deleteButton,\n            children: \"\\uD83D\\uDDD1\\uFE0F Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this)]\n      }, job.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"3rem\",\n        textAlign: \"center\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleApplications,\n        style: styles.toggleButton,\n        children: showApplications ? \"🔽 Hide Applications\" : \"📨 View Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), showApplications && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: styles.sectionHeading,\n        children: \"\\uD83D\\uDCC4 User Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }, this), applications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        style: styles.noData,\n        children: \"No applications submitted yet.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          overflowX: \"auto\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          style: styles.table,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              style: {\n                backgroundColor: \"#f1f1f1\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Job Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Applicant\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Applied On\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Resume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: applications.map((app, index) => {\n              var _app$job;\n              return /*#__PURE__*/_jsxDEV(\"tr\", {\n                style: {\n                  backgroundColor: index % 2 === 0 ? \"#fff\" : \"#f9f9f9\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: ((_app$job = app.job) === null || _app$job === void 0 ? void 0 : _app$job.title) || \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.name || \"Anonymous\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.status\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Date(app.created_at).toLocaleString(\"en-IN\", {\n                    year: \"numeric\",\n                    month: \"short\",\n                    day: \"numeric\",\n                    hour: \"numeric\",\n                    minute: \"2-digit\",\n                    hour12: true\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: app.resume_url ? /*#__PURE__*/_jsxDEV(\"a\", {\n                    href: app.resume_url,\n                    target: \"_blank\",\n                    rel: \"noopener noreferrer\",\n                    children: \"\\uD83D\\uDCCE View\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 27\n                  }, this) : \"N/A\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 23\n                }, this)]\n              }, app.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"opD4y98ZfeIb9Jd9vlJJ07jekuo=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nconst styles = {\n  container: {\n    maxWidth: \"1200px\",\n    margin: \"0 auto\",\n    padding: \"2rem\",\n    fontFamily: \"'Segoe UI', sans-serif\",\n    backgroundColor: \"#fefefe\"\n  },\n  heading: {\n    fontSize: \"2.5rem\",\n    marginBottom: \"1.5rem\",\n    color: \"#2c3e50\",\n    textAlign: \"center\"\n  },\n  sectionHeading: {\n    fontSize: \"1.75rem\",\n    color: \"#333\",\n    marginTop: \"2rem\",\n    marginBottom: \"1rem\",\n    borderBottom: \"2px solid #ccc\",\n    paddingBottom: \"0.5rem\"\n  },\n  formContainer: {\n    background: \"#ffffff\",\n    padding: \"1.5rem\",\n    borderRadius: \"12px\",\n    boxShadow: \"0 6px 18px rgba(0,0,0,0.06)\"\n  },\n  form: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    gap: \"1rem\"\n  },\n  input: {\n    padding: \"0.75rem\",\n    borderRadius: \"8px\",\n    border: \"1px solid #ccc\",\n    fontSize: \"1rem\",\n    width: \"100%\"\n  },\n  textarea: {\n    padding: \"0.75rem\",\n    borderRadius: \"8px\",\n    border: \"1px solid #ccc\",\n    fontSize: \"1rem\",\n    resize: \"vertical\",\n    width: \"100%\"\n  },\n  primaryButton: {\n    padding: \"0.75rem 1.5rem\",\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    fontWeight: \"bold\",\n    cursor: \"pointer\"\n  },\n  secondaryButton: {\n    padding: \"0.75rem 1.5rem\",\n    backgroundColor: \"#6c757d\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\"\n  },\n  cardGrid: {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\n    gap: \"1.5rem\",\n    marginTop: \"1rem\"\n  },\n  card: {\n    background: \"#ffffff\",\n    border: \"1px solid #e0e0e0\",\n    borderRadius: \"10px\",\n    padding: \"1.25rem\",\n    boxShadow: \"0 4px 8px rgba(0,0,0,0.05)\",\n    transition: \"transform 0.2s ease\"\n  },\n  jobTitle: {\n    marginBottom: \"0.5rem\",\n    color: \"#007bff\",\n    fontSize: \"1.2rem\",\n    fontWeight: \"bold\"\n  },\n  smallButton: {\n    padding: \"0.4rem 0.8rem\",\n    backgroundColor: \"#ffc107\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\",\n    marginRight: \"0.5rem\"\n  },\n  deleteButton: {\n    padding: \"0.4rem 0.8rem\",\n    backgroundColor: \"#dc3545\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"4px\",\n    cursor: \"pointer\"\n  },\n  buttonGroup: {\n    marginTop: \"1rem\",\n    display: \"flex\",\n    justifyContent: \"flex-start\",\n    gap: \"0.5rem\"\n  },\n  toggleButton: {\n    padding: \"0.75rem 1.5rem\",\n    backgroundColor: \"#17a2b8\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"6px\",\n    cursor: \"pointer\",\n    fontSize: \"1rem\",\n    fontWeight: \"bold\"\n  },\n  table: {\n    width: \"100%\",\n    borderCollapse: \"collapse\",\n    marginTop: \"1rem\"\n  },\n  noData: {\n    fontStyle: \"italic\",\n    color: \"#888\",\n    textAlign: \"center\",\n    marginTop: \"1rem\"\n  }\n};\nexport default AdminDashboard;\n\n///////////////////////////////////////===================================Below working========================\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function AdminDashboard() {\n//   const [jobs, setJobs] = useState([]);\n//   const [applications, setApplications] = useState([]);\n//   const [showApplications, setShowApplications] = useState(false); // ✅ toggle state\n//   const [form, setForm] = useState({\n//     title: \"\",\n//     description: \"\",\n//     location: \"\",\n//     salary: \"\",\n//     status: \"Active\",\n//   });\n//   const [editId, setEditId] = useState(null);\n//   const navigate = useNavigate();\n\n//   const fetchJobs = async () => {\n//     try {\n//       const res = await API.get(\"/jobs/\");\n//       setJobs(res.data);\n//     } catch (err) {\n//       if (err.response?.status === 401) {\n//         navigate(\"/login\");\n//       }\n//     }\n//   };\n\n//   const fetchApplications = async () => {\n//     try {\n//       const res = await API.get(\"/applications/all-applications/\");\n//       console.log(\"Applications fetched:\", res.data.length);\n//       console.log(\"Applications fetched:\", res.data); // ✅ log data\n//       setApplications(res.data);\n//     } catch (err) {\n//       console.error(\"Failed to fetch applications:\", err);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchJobs();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const payload = {\n//       ...form,\n//       salary: parseFloat(form.salary),\n//     };\n\n//     try {\n//       if (editId) {\n//         await API.put(`/jobs/${editId}/`, payload);\n//         setEditId(null);\n//       } else {\n//         await API.post(\"/jobs/\", payload);\n//       }\n//       setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\n//       fetchJobs();\n//     } catch (err) {\n//       alert(editId ? \"Failed to update job\" : \"Failed to add job\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await API.delete(`/jobs/${id}`);\n//       fetchJobs();\n//     } catch (err) {\n//       alert(\"Failed to delete job\");\n//     }\n//   };\n\n//   const handleEdit = (job) => {\n//     setEditId(job.id);\n//     setForm({\n//       title: job.title,\n//       description: job.description,\n//       location: job.location,\n//       salary: job.salary,\n//       status: job.status,\n//     });\n//     window.scrollTo({ top: 0, behavior: \"smooth\" });\n//   };\n\n//   const handleCancelEdit = () => {\n//     setEditId(null);\n//     setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\n//   };\n\n//   // const toggleApplications = async () => {\n//   //   if (!showApplications) {\n//   //     await fetchApplications();\n//   //   }\n//   //   setShowApplications(!showApplications);\n//   // };\n\n//   const toggleApplications = async () => {\n//     const newShowState = !showApplications;\n//     setShowApplications(newShowState);\n//     if (newShowState) {\n//       await fetchApplications(); // Always fetch latest when showing\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: \"2rem\" }}>\n//       <h2>Admin Dashboard</h2>\n\n//       <h3>{editId ? \"Edit Job\" : \"Add Job\"}</h3>\n//       <form onSubmit={handleSubmit} style={{ maxWidth: 600 }}>\n//         <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\n//         <br />\n//         <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" required />\n//         <br />\n//         <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required />\n//         <br />\n//         <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary\" required />\n//         <br />\n//         <select name=\"status\" value={form.status} onChange={handleChange}>\n//           <option value=\"Active\">Active</option>\n//           <option value=\"Closed\">Closed</option>\n//         </select>\n//         <br />\n//         <button type=\"submit\">{editId ? \"Update Job\" : \"Add Job\"}</button>\n//         {editId && <button type=\"button\" onClick={handleCancelEdit}>Cancel</button>}\n//       </form>\n\n//       <h3>All Jobs</h3>\n//       {jobs.map((job) => (\n//         <div key={job.id} style={{ margin: \"1rem 0\", padding: \"1rem\", border: \"1px solid gray\" }}>\n//           <h4>{job.title}</h4>\n//           <p>{job.location} | ₹{job.salary}</p>\n//           <p>{job.description}</p>\n//           <p>Status: {job.status}</p>\n//           <button onClick={() => handleEdit(job)}>Edit</button>\n//           <button onClick={() => handleDelete(job.id)} style={{ marginLeft: \"1rem\" }}>Delete</button>\n//         </div>\n//       ))}\n\n//       {/* Toggle Applications */}\n//       <div style={{ marginTop: \"2rem\" }}>\n//         <button onClick={toggleApplications}>\n//           {showApplications ? \"Hide Applications\" : \"View Applications\"}\n//         </button>\n//       </div>\n\n//       {/* Applications Table */}\n//       {showApplications && (\n//         <>\n//           <h3 style={{ marginTop: \"1rem\" }}>User Applications</h3>\n//           {applications.length === 0 ? (\n//             <p>No applications found.</p>\n//           ) : (\n//             <table border=\"1\" cellPadding=\"10\" style={{ borderCollapse: \"collapse\", width: \"100%\", marginTop: \"1rem\" }}>\n//               <thead>\n//                 <tr>\n//                   <th>Job Title</th>\n//                   <th>Applicant</th>\n//                   <th>Email</th>\n//                   <th>Status</th>\n//                   <th>Applied On</th>\n//                   <th>Resume</th>\n//                 </tr>\n//               </thead>\n//               <tbody>\n//                 {applications.map((app) => (\n//                   <tr key={app.id}>\n//                     <td>{app.job?.title || \"N/A\"}</td>\n//                     <td>{app.name || \"Anonymous\"}</td>\n//                     <td>{app.email || \"N/A\"}</td>\n//                     <td>{app.status}</td>\n//                     <td>\n//                           {new Date(app.created_at).toLocaleString('en-IN', {\n//                             year: 'numeric',\n//                             month: 'short',\n//                             day: 'numeric',\n//                             hour: 'numeric',\n//                             minute: '2-digit',\n//                             hour12: true,\n//                           })}\n//                         </td>\n//                     <td>\n//                       {app.resume_url ? (\n//                         <a href={app.resume_url} target=\"_blank\" rel=\"noopener noreferrer\">\n//                           View Resume\n//                         </a>\n//                       ) : (\n//                         \"N/A\"\n//                       )}\n//                     </td>\n//                   </tr>\n//                 ))}\n//               </tbody>\n//             </table>\n//           )}\n//         </>\n//       )}\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\n\n////////////////////////////////////////////////==========================above working==================\n// working perfectly with editing jobs //\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function AdminDashboard() {\n//   const [jobs, setJobs] = useState([]);\n//   const [form, setForm] = useState({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\n//   const [editId, setEditId] = useState(null); // ✅ To track edit mode\n//   const navigate = useNavigate();\n\n//   const fetchJobs = async () => {\n//     try {\n//       const res = await API.get(\"/jobs/\");\n//       setJobs(res.data);\n//     } catch (err) {\n//       if (err.response?.status === 401) {\n//         navigate(\"/login\");\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchJobs();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const payload = {\n//       ...form,\n//       salary: parseFloat(form.salary),\n//     };\n\n//     try {\n//       if (editId) {\n//         // ✅ Edit mode\n//         await API.put(`/jobs/${editId}/`, payload);\n//         setEditId(null); // Exit edit mode\n//       } else {\n//         // ✅ Add mode\n//         await API.post(\"/jobs/\", payload);\n//       }\n//       setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\n//       fetchJobs();\n//     } catch (err) {\n//       alert(editId ? \"Failed to update job\" : \"Failed to add job\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await API.delete(`/jobs/${id}`);\n//       fetchJobs();\n//     } catch (err) {\n//       alert(\"Failed to delete job\");\n//     }\n//   };\n\n//   const handleEdit = (job) => {\n//     setEditId(job.id);\n//     setForm({\n//       title: job.title,\n//       description: job.description,\n//       location: job.location,\n//       salary: job.salary,\n//       status: job.status,\n//     });\n//     window.scrollTo({ top: 0, behavior: \"smooth\" }); // Optional: scroll to form\n//   };\n\n//   const handleCancelEdit = () => {\n//     setEditId(null);\n//     setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\n//   };\n\n//   return (\n//     <div style={{ padding: \"2rem\" }}>\n//       <h2>Admin Dashboard</h2>\n\n//       <h3>{editId ? \"Edit Job\" : \"Add Job\"}</h3>\n//       <form onSubmit={handleSubmit} style={{ maxWidth: 600 }}>\n//         <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\n//         <br />\n//         <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" required />\n//         <br />\n//         <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required />\n//         <br />\n//         <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary\" required />\n//         <br />\n//         <select name=\"status\" value={form.status} onChange={handleChange}>\n//           <option value=\"Active\">Active</option>\n//           <option value=\"Closed\">Closed</option>\n//         </select>\n//         <br />\n//         <button type=\"submit\">{editId ? \"Update Job\" : \"Add Job\"}</button>\n//         {editId && <button type=\"button\" onClick={handleCancelEdit}>Cancel</button>}\n//       </form>\n\n//       <h3>All Jobs</h3>\n//       {jobs.map((job) => (\n//         <div key={job.id} style={{ margin: \"1rem 0\", padding: \"1rem\", border: \"1px solid gray\" }}>\n//           <h4>{job.title}</h4>\n//           <p>{job.location} | ₹{job.salary}</p>\n//           <p>{job.description}</p>\n//           <p>Status: {job.status}</p>\n//           <button onClick={() => handleEdit(job)}>Edit</button>\n//           <button onClick={() => handleDelete(job.id)} style={{ marginLeft: \"1rem\" }}>Delete</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\n\n// working coe //\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function AdminDashboard() {\n//   const [jobs, setJobs] = useState([]);\n//   const [form, setForm] = useState({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\"});\n//   const navigate = useNavigate();\n\n//   const fetchJobs = async () => {\n//     try {\n//       const res = await API.get(\"/jobs/\");\n//       setJobs(res.data);\n//     } catch (err) {\n//       if (err.response?.status === 401) {\n//         navigate(\"/login\");\n//       }\n//     }\n//   };\n\n// //   useEffect(() => {\n// //     fetchJobs();\n// //   }, []);\n\n// useEffect(() => {\n//   fetchJobs();\n// }, [fetchJobs]); // ✅ add fetchJobs here\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleAddJob = async (e) => {\n//     e.preventDefault();\n\n//     const payload = {\n//       ...form,\n//       salary: parseFloat(form.salary), // 👈 Ensure salary is a float\n//     };\n//     console.log(\"Payload to backend:\", payload);\n//     try {\n//       await API.post(\"/jobs/\", payload);\n//       setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\"});\n//       fetchJobs();\n//     } catch (err) {\n//       alert(\"Failed to add job\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await API.delete(`/jobs/${id}`);\n//       fetchJobs();\n//     } catch (err) {\n//       alert(\"Failed to delete job\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: \"2rem\" }}>\n//       <h2>Admin Dashboard</h2>\n\n//       <h3>Add Job</h3>\n//       <form onSubmit={handleAddJob} style={{ maxWidth: 600 }}>\n//         <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\n//         <br />\n//         <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" required />\n//         <br />\n//         <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required />\n//         <br />\n//         <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary\" required />\n//         <br />\n//         <button type=\"submit\">Add Job</button>\n//       </form>\n\n//       <h3>All Jobs</h3>\n//       {jobs.map((job) => (\n//         <div key={job.id} style={{ margin: \"1rem 0\", padding: \"1rem\", border: \"1px solid gray\" }}>\n//           <h4>{job.title}</h4>\n//           <p>{job.location} | ₹{job.salary}</p>\n//           <p>{job.description}</p>\n//           <p>Status: {job.status}</p>\n//           <button onClick={() => handleDelete(job.id)}>Delete</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","jobs","setJobs","applications","setApplications","showApplications","setShowApplications","form","setForm","title","description","location","salary","status","editId","setEditId","navigate","fetchJobs","res","get","data","err","_err$response","response","fetchApplications","console","error","handleChange","e","target","name","value","handleSubmit","preventDefault","payload","parseFloat","put","post","alert","handleDelete","id","delete","handleEdit","job","window","scrollTo","top","behavior","handleCancelEdit","toggleApplications","newShowState","style","styles","container","children","heading","fileName","_jsxFileName","lineNumber","columnNumber","formContainer","sectionHeading","onSubmit","onChange","placeholder","required","input","rows","textarea","type","display","gap","primaryButton","onClick","secondaryButton","cardGrid","map","card","jobTitle","marginTop","buttonGroup","smallButton","deleteButton","textAlign","toggleButton","length","noData","overflowX","table","backgroundColor","app","index","_app$job","email","Date","created_at","toLocaleString","year","month","day","hour","minute","hour12","resume_url","href","rel","_c","maxWidth","margin","padding","fontFamily","fontSize","marginBottom","color","borderBottom","paddingBottom","background","borderRadius","boxShadow","flexDirection","border","width","resize","fontWeight","cursor","gridTemplateColumns","transition","marginRight","justifyContent","borderCollapse","fontStyle","$RefreshReg$"],"sources":["C:/Users/Owner/Downloads/job-board-app/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport API from \"../api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction AdminDashboard() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [applications, setApplications] = useState([]);\r\n  const [showApplications, setShowApplications] = useState(false);\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    salary: \"\",\r\n    status: \"Active\",\r\n  });\r\n  const [editId, setEditId] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const res = await API.get(\"/jobs/\");\r\n      setJobs(res.data);\r\n    } catch (err) {\r\n      if (err.response?.status === 401) {\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchApplications = async () => {\r\n    try {\r\n      const res = await API.get(\"/applications/all-applications/\");\r\n      setApplications(res.data);\r\n    } catch (err) {\r\n      console.error(\"❌ Failed to fetch applications:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      ...form,\r\n      salary: parseFloat(form.salary),\r\n    };\r\n\r\n    try {\r\n      if (editId) {\r\n        await API.put(`/jobs/${editId}/`, payload);\r\n        setEditId(null);\r\n      } else {\r\n        await API.post(\"/jobs/\", payload);\r\n      }\r\n      setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n      fetchJobs();\r\n    } catch (err) {\r\n      alert(editId ? \"Failed to update job\" : \"Failed to add job\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await API.delete(`/jobs/${id}`);\r\n      fetchJobs();\r\n    } catch (err) {\r\n      alert(\"Failed to delete job\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (job) => {\r\n    setEditId(job.id);\r\n    setForm({\r\n      title: job.title,\r\n      description: job.description,\r\n      location: job.location,\r\n      salary: job.salary,\r\n      status: job.status,\r\n    });\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditId(null);\r\n    setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n  };\r\n\r\n  const toggleApplications = async () => {\r\n    const newShowState = !showApplications;\r\n    setShowApplications(newShowState);\r\n    if (newShowState) {\r\n      await fetchApplications();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={styles.container}>\r\n      <h2 style={styles.heading}>🛠️ Admin Dashboard</h2>\r\n\r\n      {/* Job Form */}\r\n      <div style={styles.formContainer}>\r\n        <h3 style={styles.sectionHeading}>{editId ? \"✏️ Edit Job\" : \"➕ Add New Job\"}</h3>\r\n        <form onSubmit={handleSubmit} style={styles.form}>\r\n          <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Job Title\" required style={styles.input} />\r\n          <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Job Description\" required rows=\"3\" style={styles.textarea} />\r\n          <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required style={styles.input} />\r\n          <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary (₹)\" required style={styles.input} />\r\n          <select name=\"status\" value={form.status} onChange={handleChange} style={styles.input}>\r\n            <option value=\"Active\">Active</option>\r\n            <option value=\"Closed\">Closed</option>\r\n          </select>\r\n          <div style={{ display: \"flex\", gap: \"1rem\" }}>\r\n            <button type=\"submit\" style={styles.primaryButton}>\r\n              {editId ? \"Update Job\" : \"Add Job\"}\r\n            </button>\r\n            {editId && (\r\n              <button type=\"button\" onClick={handleCancelEdit} style={styles.secondaryButton}>\r\n                Cancel\r\n              </button>\r\n            )}\r\n          </div>\r\n        </form>\r\n      </div>\r\n\r\n      {/* Job List */}\r\n      <h3 style={styles.sectionHeading}>📋 All Job Listings</h3>\r\n      <div style={styles.cardGrid}>\r\n        {jobs.map((job) => (\r\n          <div key={job.id} style={styles.card}>\r\n            <h4 style={styles.jobTitle}>{job.title}</h4>\r\n            <p><strong>📍 Location:</strong> {job.location}</p>\r\n            <p><strong>💰 Salary:</strong> ₹{job.salary}</p>\r\n            <p><strong>📌 Status:</strong> {job.status}</p>\r\n            <p style={{ marginTop: \"0.5rem\" }}>{job.description}</p>\r\n            <div style={styles.buttonGroup}>\r\n              <button onClick={() => handleEdit(job)} style={styles.smallButton}>✏️ Edit</button>\r\n              <button onClick={() => handleDelete(job.id)} style={styles.deleteButton}>🗑️ Delete</button>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Toggle Applications */}\r\n      <div style={{ marginTop: \"3rem\", textAlign: \"center\" }}>\r\n        <button onClick={toggleApplications} style={styles.toggleButton}>\r\n          {showApplications ? \"🔽 Hide Applications\" : \"📨 View Applications\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Applications Table */}\r\n      {showApplications && (\r\n        <>\r\n          <h3 style={styles.sectionHeading}>📄 User Applications</h3>\r\n          {applications.length === 0 ? (\r\n            <p style={styles.noData}>No applications submitted yet.</p>\r\n          ) : (\r\n            <div style={{ overflowX: \"auto\" }}>\r\n              <table style={styles.table}>\r\n                <thead>\r\n                  <tr style={{ backgroundColor: \"#f1f1f1\" }}>\r\n                    <th>Job Title</th>\r\n                    <th>Applicant</th>\r\n                    <th>Email</th>\r\n                    <th>Status</th>\r\n                    <th>Applied On</th>\r\n                    <th>Resume</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {applications.map((app, index) => (\r\n                    <tr key={app.id} style={{ backgroundColor: index % 2 === 0 ? \"#fff\" : \"#f9f9f9\" }}>\r\n                      <td>{app.job?.title || \"N/A\"}</td>\r\n                      <td>{app.name || \"Anonymous\"}</td>\r\n                      <td>{app.email}</td>\r\n                      <td>{app.status}</td>\r\n                      <td>\r\n                        {new Date(app.created_at).toLocaleString(\"en-IN\", {\r\n                          year: \"numeric\",\r\n                          month: \"short\",\r\n                          day: \"numeric\",\r\n                          hour: \"numeric\",\r\n                          minute: \"2-digit\",\r\n                          hour12: true,\r\n                        })}\r\n                      </td>\r\n                      <td>\r\n                        {app.resume_url ? (\r\n                          <a href={app.resume_url} target=\"_blank\" rel=\"noopener noreferrer\">📎 View</a>\r\n                        ) : \"N/A\"}\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst styles = {\r\n  container: {\r\n    maxWidth: \"1200px\",\r\n    margin: \"0 auto\",\r\n    padding: \"2rem\",\r\n    fontFamily: \"'Segoe UI', sans-serif\",\r\n    backgroundColor: \"#fefefe\",\r\n  },\r\n  heading: {\r\n    fontSize: \"2.5rem\",\r\n    marginBottom: \"1.5rem\",\r\n    color: \"#2c3e50\",\r\n    textAlign: \"center\",\r\n  },\r\n  sectionHeading: {\r\n    fontSize: \"1.75rem\",\r\n    color: \"#333\",\r\n    marginTop: \"2rem\",\r\n    marginBottom: \"1rem\",\r\n    borderBottom: \"2px solid #ccc\",\r\n    paddingBottom: \"0.5rem\",\r\n  },\r\n  formContainer: {\r\n    background: \"#ffffff\",\r\n    padding: \"1.5rem\",\r\n    borderRadius: \"12px\",\r\n    boxShadow: \"0 6px 18px rgba(0,0,0,0.06)\",\r\n  },\r\n  form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    gap: \"1rem\",\r\n  },\r\n  input: {\r\n    padding: \"0.75rem\",\r\n    borderRadius: \"8px\",\r\n    border: \"1px solid #ccc\",\r\n    fontSize: \"1rem\",\r\n    width: \"100%\",\r\n  },\r\n  textarea: {\r\n    padding: \"0.75rem\",\r\n    borderRadius: \"8px\",\r\n    border: \"1px solid #ccc\",\r\n    fontSize: \"1rem\",\r\n    resize: \"vertical\",\r\n    width: \"100%\",\r\n  },\r\n  primaryButton: {\r\n    padding: \"0.75rem 1.5rem\",\r\n    backgroundColor: \"#007bff\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    borderRadius: \"6px\",\r\n    fontWeight: \"bold\",\r\n    cursor: \"pointer\",\r\n  },\r\n  secondaryButton: {\r\n    padding: \"0.75rem 1.5rem\",\r\n    backgroundColor: \"#6c757d\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    borderRadius: \"6px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  cardGrid: {\r\n    display: \"grid\",\r\n    gridTemplateColumns: \"repeat(auto-fill, minmax(300px, 1fr))\",\r\n    gap: \"1.5rem\",\r\n    marginTop: \"1rem\",\r\n  },\r\n  card: {\r\n    background: \"#ffffff\",\r\n    border: \"1px solid #e0e0e0\",\r\n    borderRadius: \"10px\",\r\n    padding: \"1.25rem\",\r\n    boxShadow: \"0 4px 8px rgba(0,0,0,0.05)\",\r\n    transition: \"transform 0.2s ease\",\r\n  },\r\n  jobTitle: {\r\n    marginBottom: \"0.5rem\",\r\n    color: \"#007bff\",\r\n    fontSize: \"1.2rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  smallButton: {\r\n    padding: \"0.4rem 0.8rem\",\r\n    backgroundColor: \"#ffc107\",\r\n    border: \"none\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n    marginRight: \"0.5rem\",\r\n  },\r\n  deleteButton: {\r\n    padding: \"0.4rem 0.8rem\",\r\n    backgroundColor: \"#dc3545\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    borderRadius: \"4px\",\r\n    cursor: \"pointer\",\r\n  },\r\n  buttonGroup: {\r\n    marginTop: \"1rem\",\r\n    display: \"flex\",\r\n    justifyContent: \"flex-start\",\r\n    gap: \"0.5rem\",\r\n  },\r\n  toggleButton: {\r\n    padding: \"0.75rem 1.5rem\",\r\n    backgroundColor: \"#17a2b8\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    borderRadius: \"6px\",\r\n    cursor: \"pointer\",\r\n    fontSize: \"1rem\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  table: {\r\n    width: \"100%\",\r\n    borderCollapse: \"collapse\",\r\n    marginTop: \"1rem\",\r\n  },\r\n  noData: {\r\n    fontStyle: \"italic\",\r\n    color: \"#888\",\r\n    textAlign: \"center\",\r\n    marginTop: \"1rem\",\r\n  },\r\n};\r\n\r\nexport default AdminDashboard;\r\n\r\n///////////////////////////////////////===================================Below working========================\r\n// import React, { useEffect, useState } from \"react\";\r\n// import API from \"../api\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function AdminDashboard() {\r\n//   const [jobs, setJobs] = useState([]);\r\n//   const [applications, setApplications] = useState([]);\r\n//   const [showApplications, setShowApplications] = useState(false); // ✅ toggle state\r\n//   const [form, setForm] = useState({\r\n//     title: \"\",\r\n//     description: \"\",\r\n//     location: \"\",\r\n//     salary: \"\",\r\n//     status: \"Active\",\r\n//   });\r\n//   const [editId, setEditId] = useState(null);\r\n//   const navigate = useNavigate();\r\n\r\n//   const fetchJobs = async () => {\r\n//     try {\r\n//       const res = await API.get(\"/jobs/\");\r\n//       setJobs(res.data);\r\n//     } catch (err) {\r\n//       if (err.response?.status === 401) {\r\n//         navigate(\"/login\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   const fetchApplications = async () => {\r\n//     try {\r\n//       const res = await API.get(\"/applications/all-applications/\");\r\n//       console.log(\"Applications fetched:\", res.data.length);\r\n//       console.log(\"Applications fetched:\", res.data); // ✅ log data\r\n//       setApplications(res.data);\r\n//     } catch (err) {\r\n//       console.error(\"Failed to fetch applications:\", err);\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchJobs();\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const payload = {\r\n//       ...form,\r\n//       salary: parseFloat(form.salary),\r\n//     };\r\n\r\n//     try {\r\n//       if (editId) {\r\n//         await API.put(`/jobs/${editId}/`, payload);\r\n//         setEditId(null);\r\n//       } else {\r\n//         await API.post(\"/jobs/\", payload);\r\n//       }\r\n//       setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(editId ? \"Failed to update job\" : \"Failed to add job\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await API.delete(`/jobs/${id}`);\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(\"Failed to delete job\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (job) => {\r\n//     setEditId(job.id);\r\n//     setForm({\r\n//       title: job.title,\r\n//       description: job.description,\r\n//       location: job.location,\r\n//       salary: job.salary,\r\n//       status: job.status,\r\n//     });\r\n//     window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n//   };\r\n\r\n//   const handleCancelEdit = () => {\r\n//     setEditId(null);\r\n//     setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n//   };\r\n\r\n//   // const toggleApplications = async () => {\r\n//   //   if (!showApplications) {\r\n//   //     await fetchApplications();\r\n//   //   }\r\n//   //   setShowApplications(!showApplications);\r\n//   // };\r\n\r\n//   const toggleApplications = async () => {\r\n//     const newShowState = !showApplications;\r\n//     setShowApplications(newShowState);\r\n//     if (newShowState) {\r\n//       await fetchApplications(); // Always fetch latest when showing\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"2rem\" }}>\r\n//       <h2>Admin Dashboard</h2>\r\n\r\n//       <h3>{editId ? \"Edit Job\" : \"Add Job\"}</h3>\r\n//       <form onSubmit={handleSubmit} style={{ maxWidth: 600 }}>\r\n//         <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\r\n//         <br />\r\n//         <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" required />\r\n//         <br />\r\n//         <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required />\r\n//         <br />\r\n//         <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary\" required />\r\n//         <br />\r\n//         <select name=\"status\" value={form.status} onChange={handleChange}>\r\n//           <option value=\"Active\">Active</option>\r\n//           <option value=\"Closed\">Closed</option>\r\n//         </select>\r\n//         <br />\r\n//         <button type=\"submit\">{editId ? \"Update Job\" : \"Add Job\"}</button>\r\n//         {editId && <button type=\"button\" onClick={handleCancelEdit}>Cancel</button>}\r\n//       </form>\r\n\r\n//       <h3>All Jobs</h3>\r\n//       {jobs.map((job) => (\r\n//         <div key={job.id} style={{ margin: \"1rem 0\", padding: \"1rem\", border: \"1px solid gray\" }}>\r\n//           <h4>{job.title}</h4>\r\n//           <p>{job.location} | ₹{job.salary}</p>\r\n//           <p>{job.description}</p>\r\n//           <p>Status: {job.status}</p>\r\n//           <button onClick={() => handleEdit(job)}>Edit</button>\r\n//           <button onClick={() => handleDelete(job.id)} style={{ marginLeft: \"1rem\" }}>Delete</button>\r\n//         </div>\r\n//       ))}\r\n\r\n//       {/* Toggle Applications */}\r\n//       <div style={{ marginTop: \"2rem\" }}>\r\n//         <button onClick={toggleApplications}>\r\n//           {showApplications ? \"Hide Applications\" : \"View Applications\"}\r\n//         </button>\r\n//       </div>\r\n\r\n//       {/* Applications Table */}\r\n//       {showApplications && (\r\n//         <>\r\n//           <h3 style={{ marginTop: \"1rem\" }}>User Applications</h3>\r\n//           {applications.length === 0 ? (\r\n//             <p>No applications found.</p>\r\n//           ) : (\r\n//             <table border=\"1\" cellPadding=\"10\" style={{ borderCollapse: \"collapse\", width: \"100%\", marginTop: \"1rem\" }}>\r\n//               <thead>\r\n//                 <tr>\r\n//                   <th>Job Title</th>\r\n//                   <th>Applicant</th>\r\n//                   <th>Email</th>\r\n//                   <th>Status</th>\r\n//                   <th>Applied On</th>\r\n//                   <th>Resume</th>\r\n//                 </tr>\r\n//               </thead>\r\n//               <tbody>\r\n//                 {applications.map((app) => (\r\n//                   <tr key={app.id}>\r\n//                     <td>{app.job?.title || \"N/A\"}</td>\r\n//                     <td>{app.name || \"Anonymous\"}</td>\r\n//                     <td>{app.email || \"N/A\"}</td>\r\n//                     <td>{app.status}</td>\r\n//                     <td>\r\n//                           {new Date(app.created_at).toLocaleString('en-IN', {\r\n//                             year: 'numeric',\r\n//                             month: 'short',\r\n//                             day: 'numeric',\r\n//                             hour: 'numeric',\r\n//                             minute: '2-digit',\r\n//                             hour12: true,\r\n//                           })}\r\n//                         </td>\r\n//                     <td>\r\n//                       {app.resume_url ? (\r\n//                         <a href={app.resume_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n//                           View Resume\r\n//                         </a>\r\n//                       ) : (\r\n//                         \"N/A\"\r\n//                       )}\r\n//                     </td>\r\n//                   </tr>\r\n//                 ))}\r\n//               </tbody>\r\n//             </table>\r\n//           )}\r\n//         </>\r\n//       )}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n\r\n////////////////////////////////////////////////==========================above working==================\r\n// working perfectly with editing jobs //\r\n// import React, { useEffect, useState } from \"react\";\r\n// import API from \"../api\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function AdminDashboard() {\r\n//   const [jobs, setJobs] = useState([]);\r\n//   const [form, setForm] = useState({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n//   const [editId, setEditId] = useState(null); // ✅ To track edit mode\r\n//   const navigate = useNavigate();\r\n\r\n//   const fetchJobs = async () => {\r\n//     try {\r\n//       const res = await API.get(\"/jobs/\");\r\n//       setJobs(res.data);\r\n//     } catch (err) {\r\n//       if (err.response?.status === 401) {\r\n//         navigate(\"/login\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchJobs();\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const payload = {\r\n//       ...form,\r\n//       salary: parseFloat(form.salary),\r\n//     };\r\n\r\n//     try {\r\n//       if (editId) {\r\n//         // ✅ Edit mode\r\n//         await API.put(`/jobs/${editId}/`, payload);\r\n//         setEditId(null); // Exit edit mode\r\n//       } else {\r\n//         // ✅ Add mode\r\n//         await API.post(\"/jobs/\", payload);\r\n//       }\r\n//       setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(editId ? \"Failed to update job\" : \"Failed to add job\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await API.delete(`/jobs/${id}`);\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(\"Failed to delete job\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (job) => {\r\n//     setEditId(job.id);\r\n//     setForm({\r\n//       title: job.title,\r\n//       description: job.description,\r\n//       location: job.location,\r\n//       salary: job.salary,\r\n//       status: job.status,\r\n//     });\r\n//     window.scrollTo({ top: 0, behavior: \"smooth\" }); // Optional: scroll to form\r\n//   };\r\n\r\n//   const handleCancelEdit = () => {\r\n//     setEditId(null);\r\n//     setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"2rem\" }}>\r\n//       <h2>Admin Dashboard</h2>\r\n\r\n//       <h3>{editId ? \"Edit Job\" : \"Add Job\"}</h3>\r\n//       <form onSubmit={handleSubmit} style={{ maxWidth: 600 }}>\r\n//         <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\r\n//         <br />\r\n//         <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" required />\r\n//         <br />\r\n//         <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required />\r\n//         <br />\r\n//         <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary\" required />\r\n//         <br />\r\n//         <select name=\"status\" value={form.status} onChange={handleChange}>\r\n//           <option value=\"Active\">Active</option>\r\n//           <option value=\"Closed\">Closed</option>\r\n//         </select>\r\n//         <br />\r\n//         <button type=\"submit\">{editId ? \"Update Job\" : \"Add Job\"}</button>\r\n//         {editId && <button type=\"button\" onClick={handleCancelEdit}>Cancel</button>}\r\n//       </form>\r\n\r\n//       <h3>All Jobs</h3>\r\n//       {jobs.map((job) => (\r\n//         <div key={job.id} style={{ margin: \"1rem 0\", padding: \"1rem\", border: \"1px solid gray\" }}>\r\n//           <h4>{job.title}</h4>\r\n//           <p>{job.location} | ₹{job.salary}</p>\r\n//           <p>{job.description}</p>\r\n//           <p>Status: {job.status}</p>\r\n//           <button onClick={() => handleEdit(job)}>Edit</button>\r\n//           <button onClick={() => handleDelete(job.id)} style={{ marginLeft: \"1rem\" }}>Delete</button>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\n\r\n// working coe //\r\n// import React, { useEffect, useState } from \"react\";\r\n// import API from \"../api\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function AdminDashboard() {\r\n//   const [jobs, setJobs] = useState([]);\r\n//   const [form, setForm] = useState({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\"});\r\n//   const navigate = useNavigate();\r\n\r\n//   const fetchJobs = async () => {\r\n//     try {\r\n//       const res = await API.get(\"/jobs/\");\r\n//       setJobs(res.data);\r\n//     } catch (err) {\r\n//       if (err.response?.status === 401) {\r\n//         navigate(\"/login\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n// //   useEffect(() => {\r\n// //     fetchJobs();\r\n// //   }, []);\r\n\r\n// useEffect(() => {\r\n//   fetchJobs();\r\n// }, [fetchJobs]); // ✅ add fetchJobs here\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleAddJob = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const payload = {\r\n//       ...form,\r\n//       salary: parseFloat(form.salary), // 👈 Ensure salary is a float\r\n//     };\r\n//     console.log(\"Payload to backend:\", payload);\r\n//     try {\r\n//       await API.post(\"/jobs/\", payload);\r\n//       setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\"});\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(\"Failed to add job\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await API.delete(`/jobs/${id}`);\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(\"Failed to delete job\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"2rem\" }}>\r\n//       <h2>Admin Dashboard</h2>\r\n\r\n//       <h3>Add Job</h3>\r\n//       <form onSubmit={handleAddJob} style={{ maxWidth: 600 }}>\r\n//         <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\r\n//         <br />\r\n//         <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" required />\r\n//         <br />\r\n//         <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required />\r\n//         <br />\r\n//         <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary\" required />\r\n//         <br />\r\n//         <button type=\"submit\">Add Job</button>\r\n//       </form>\r\n\r\n//       <h3>All Jobs</h3>\r\n//       {jobs.map((job) => (\r\n//         <div key={job.id} style={{ margin: \"1rem 0\", padding: \"1rem\", border: \"1px solid gray\" }}>\r\n//           <h4>{job.title}</h4>\r\n//           <p>{job.location} | ₹{job.salary}</p>\r\n//           <p>{job.description}</p>\r\n//           <p>Status: {job.status}</p>\r\n//           <button onClick={() => handleDelete(job.id)}>Delete</button>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n"],"mappings":"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ACnBjB,KAAK,EAAE,MAAM;IACb9B,SAAS,EAAE,QAAQ;IACnBJ,SAAS,EAAE;EACb;AACF,CAAC;AAED,eAAehF,cAAc;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA2G,EAAA;AAAAyB,YAAA,CAAAzB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}