{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Downloads\\\\job-board-app\\\\frontend\\\\src\\\\pages\\\\AdminDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport API from \"../api\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction AdminDashboard() {\n  _s();\n  const [jobs, setJobs] = useState([]);\n  const [applications, setApplications] = useState([]);\n  const [showApplications, setShowApplications] = useState(false); // ✅ toggle state\n  const [form, setForm] = useState({\n    title: \"\",\n    description: \"\",\n    location: \"\",\n    salary: \"\",\n    status: \"Active\"\n  });\n  const [editId, setEditId] = useState(null);\n  const navigate = useNavigate();\n  const fetchJobs = async () => {\n    try {\n      const res = await API.get(\"/jobs/\");\n      setJobs(res.data);\n    } catch (err) {\n      var _err$response;\n      if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n        navigate(\"/login\");\n      }\n    }\n  };\n  const fetchApplications = async () => {\n    try {\n      const res = await API.get(\"/applications/all-applications/\");\n      console.log(\"Applications fetched:\", res.data.length);\n      console.log(\"Applications fetched:\", res.data); // ✅ log data\n      setApplications(res.data);\n    } catch (err) {\n      console.error(\"Failed to fetch applications:\", err);\n    }\n  };\n  useEffect(() => {\n    fetchJobs();\n  }, []);\n  const handleChange = e => {\n    setForm({\n      ...form,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const payload = {\n      ...form,\n      salary: parseFloat(form.salary)\n    };\n    try {\n      if (editId) {\n        await API.put(`/jobs/${editId}/`, payload);\n        setEditId(null);\n      } else {\n        await API.post(\"/jobs/\", payload);\n      }\n      setForm({\n        title: \"\",\n        description: \"\",\n        location: \"\",\n        salary: \"\",\n        status: \"Active\"\n      });\n      fetchJobs();\n    } catch (err) {\n      alert(editId ? \"Failed to update job\" : \"Failed to add job\");\n    }\n  };\n  const handleDelete = async id => {\n    try {\n      await API.delete(`/jobs/${id}`);\n      fetchJobs();\n    } catch (err) {\n      alert(\"Failed to delete job\");\n    }\n  };\n  const handleEdit = job => {\n    setEditId(job.id);\n    setForm({\n      title: job.title,\n      description: job.description,\n      location: job.location,\n      salary: job.salary,\n      status: job.status\n    });\n    window.scrollTo({\n      top: 0,\n      behavior: \"smooth\"\n    });\n  };\n  const handleCancelEdit = () => {\n    setEditId(null);\n    setForm({\n      title: \"\",\n      description: \"\",\n      location: \"\",\n      salary: \"\",\n      status: \"Active\"\n    });\n  };\n\n  // const toggleApplications = async () => {\n  //   if (!showApplications) {\n  //     await fetchApplications();\n  //   }\n  //   setShowApplications(!showApplications);\n  // };\n\n  const toggleApplications = async () => {\n    const newShowState = !showApplications;\n    setShowApplications(newShowState);\n    if (newShowState) {\n      await fetchApplications(); // Always fetch latest when showing\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: \"2rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: editId ? \"Edit Job\" : \"Add Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      style: {\n        maxWidth: 600\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"title\",\n        value: form.title,\n        onChange: handleChange,\n        placeholder: \"Title\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"description\",\n        value: form.description,\n        onChange: handleChange,\n        placeholder: \"Description\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"location\",\n        value: form.location,\n        onChange: handleChange,\n        placeholder: \"Location\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"salary\",\n        value: form.salary,\n        onChange: handleChange,\n        placeholder: \"Salary\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"status\",\n        value: form.status,\n        onChange: handleChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Active\",\n          children: \"Active\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Closed\",\n          children: \"Closed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editId ? \"Update Job\" : \"Add Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), editId && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleCancelEdit,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"All Jobs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this), jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        margin: \"1rem 0\",\n        padding: \"1rem\",\n        border: \"1px solid gray\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: job.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [job.location, \" | \\u20B9\", job.salary]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: job.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Status: \", job.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(job),\n        children: \"Edit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleDelete(job.id),\n        style: {\n          marginLeft: \"1rem\"\n        },\n        children: \"Delete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, job.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: \"2rem\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleApplications,\n        children: showApplications ? \"Hide Applications\" : \"View Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), showApplications && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        style: {\n          marginTop: \"1rem\"\n        },\n        children: \"User Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), applications.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No applications found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"table\", {\n        border: \"1\",\n        cellPadding: \"10\",\n        style: {\n          borderCollapse: \"collapse\",\n          width: \"100%\",\n          marginTop: \"1rem\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Job Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Applicant\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Applied On\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Resume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: applications.map(app => {\n            var _app$job;\n            return /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: ((_app$job = app.job) === null || _app$job === void 0 ? void 0 : _app$job.title) || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.name || \"Anonymous\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.email || \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: new Date(app.created_at).toLocaleString('en-IN', {\n                  year: 'numeric',\n                  month: 'short',\n                  day: 'numeric',\n                  hour: 'numeric',\n                  minute: '2-digit',\n                  hour12: true\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: app.resume_url ? /*#__PURE__*/_jsxDEV(\"a\", {\n                  href: app.resume_url,\n                  target: \"_blank\",\n                  rel: \"noopener noreferrer\",\n                  children: \"View Resume\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 25\n                }, this) : \"N/A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 21\n              }, this)]\n            }, app.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminDashboard, \"opD4y98ZfeIb9Jd9vlJJ07jekuo=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminDashboard;\nexport default AdminDashboard;\n// working perfectly with editing jobs //\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function AdminDashboard() {\n//   const [jobs, setJobs] = useState([]);\n//   const [form, setForm] = useState({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\n//   const [editId, setEditId] = useState(null); // ✅ To track edit mode\n//   const navigate = useNavigate();\n\n//   const fetchJobs = async () => {\n//     try {\n//       const res = await API.get(\"/jobs/\");\n//       setJobs(res.data);\n//     } catch (err) {\n//       if (err.response?.status === 401) {\n//         navigate(\"/login\");\n//       }\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchJobs();\n//   }, []);\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n//     const payload = {\n//       ...form,\n//       salary: parseFloat(form.salary),\n//     };\n\n//     try {\n//       if (editId) {\n//         // ✅ Edit mode\n//         await API.put(`/jobs/${editId}/`, payload);\n//         setEditId(null); // Exit edit mode\n//       } else {\n//         // ✅ Add mode\n//         await API.post(\"/jobs/\", payload);\n//       }\n//       setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\n//       fetchJobs();\n//     } catch (err) {\n//       alert(editId ? \"Failed to update job\" : \"Failed to add job\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await API.delete(`/jobs/${id}`);\n//       fetchJobs();\n//     } catch (err) {\n//       alert(\"Failed to delete job\");\n//     }\n//   };\n\n//   const handleEdit = (job) => {\n//     setEditId(job.id);\n//     setForm({\n//       title: job.title,\n//       description: job.description,\n//       location: job.location,\n//       salary: job.salary,\n//       status: job.status,\n//     });\n//     window.scrollTo({ top: 0, behavior: \"smooth\" }); // Optional: scroll to form\n//   };\n\n//   const handleCancelEdit = () => {\n//     setEditId(null);\n//     setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\n//   };\n\n//   return (\n//     <div style={{ padding: \"2rem\" }}>\n//       <h2>Admin Dashboard</h2>\n\n//       <h3>{editId ? \"Edit Job\" : \"Add Job\"}</h3>\n//       <form onSubmit={handleSubmit} style={{ maxWidth: 600 }}>\n//         <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\n//         <br />\n//         <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" required />\n//         <br />\n//         <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required />\n//         <br />\n//         <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary\" required />\n//         <br />\n//         <select name=\"status\" value={form.status} onChange={handleChange}>\n//           <option value=\"Active\">Active</option>\n//           <option value=\"Closed\">Closed</option>\n//         </select>\n//         <br />\n//         <button type=\"submit\">{editId ? \"Update Job\" : \"Add Job\"}</button>\n//         {editId && <button type=\"button\" onClick={handleCancelEdit}>Cancel</button>}\n//       </form>\n\n//       <h3>All Jobs</h3>\n//       {jobs.map((job) => (\n//         <div key={job.id} style={{ margin: \"1rem 0\", padding: \"1rem\", border: \"1px solid gray\" }}>\n//           <h4>{job.title}</h4>\n//           <p>{job.location} | ₹{job.salary}</p>\n//           <p>{job.description}</p>\n//           <p>Status: {job.status}</p>\n//           <button onClick={() => handleEdit(job)}>Edit</button>\n//           <button onClick={() => handleDelete(job.id)} style={{ marginLeft: \"1rem\" }}>Delete</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\n\n// working coe //\n// import React, { useEffect, useState } from \"react\";\n// import API from \"../api\";\n// import { useNavigate } from \"react-router-dom\";\n\n// function AdminDashboard() {\n//   const [jobs, setJobs] = useState([]);\n//   const [form, setForm] = useState({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\"});\n//   const navigate = useNavigate();\n\n//   const fetchJobs = async () => {\n//     try {\n//       const res = await API.get(\"/jobs/\");\n//       setJobs(res.data);\n//     } catch (err) {\n//       if (err.response?.status === 401) {\n//         navigate(\"/login\");\n//       }\n//     }\n//   };\n\n// //   useEffect(() => {\n// //     fetchJobs();\n// //   }, []);\n\n// useEffect(() => {\n//   fetchJobs();\n// }, [fetchJobs]); // ✅ add fetchJobs here\n\n//   const handleChange = (e) => {\n//     setForm({ ...form, [e.target.name]: e.target.value });\n//   };\n\n//   const handleAddJob = async (e) => {\n//     e.preventDefault();\n\n//     const payload = {\n//       ...form,\n//       salary: parseFloat(form.salary), // 👈 Ensure salary is a float\n//     };\n//     console.log(\"Payload to backend:\", payload);\n//     try {\n//       await API.post(\"/jobs/\", payload);\n//       setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\"});\n//       fetchJobs();\n//     } catch (err) {\n//       alert(\"Failed to add job\");\n//     }\n//   };\n\n//   const handleDelete = async (id) => {\n//     try {\n//       await API.delete(`/jobs/${id}`);\n//       fetchJobs();\n//     } catch (err) {\n//       alert(\"Failed to delete job\");\n//     }\n//   };\n\n//   return (\n//     <div style={{ padding: \"2rem\" }}>\n//       <h2>Admin Dashboard</h2>\n\n//       <h3>Add Job</h3>\n//       <form onSubmit={handleAddJob} style={{ maxWidth: 600 }}>\n//         <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\n//         <br />\n//         <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" required />\n//         <br />\n//         <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required />\n//         <br />\n//         <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary\" required />\n//         <br />\n//         <button type=\"submit\">Add Job</button>\n//       </form>\n\n//       <h3>All Jobs</h3>\n//       {jobs.map((job) => (\n//         <div key={job.id} style={{ margin: \"1rem 0\", padding: \"1rem\", border: \"1px solid gray\" }}>\n//           <h4>{job.title}</h4>\n//           <p>{job.location} | ₹{job.salary}</p>\n//           <p>{job.description}</p>\n//           <p>Status: {job.status}</p>\n//           <button onClick={() => handleDelete(job.id)}>Delete</button>\n//         </div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// export default AdminDashboard;\nvar _c;\n$RefreshReg$(_c, \"AdminDashboard\");","map":{"version":3,"names":["React","useEffect","useState","API","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","AdminDashboard","_s","jobs","setJobs","applications","setApplications","showApplications","setShowApplications","form","setForm","title","description","location","salary","status","editId","setEditId","navigate","fetchJobs","res","get","data","err","_err$response","response","fetchApplications","console","log","length","error","handleChange","e","target","name","value","handleSubmit","preventDefault","payload","parseFloat","put","post","alert","handleDelete","id","delete","handleEdit","job","window","scrollTo","top","behavior","handleCancelEdit","toggleApplications","newShowState","style","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","maxWidth","onChange","placeholder","required","type","onClick","map","margin","border","marginLeft","marginTop","cellPadding","borderCollapse","width","app","_app$job","email","Date","created_at","toLocaleString","year","month","day","hour","minute","hour12","resume_url","href","rel","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Downloads/job-board-app/frontend/src/pages/AdminDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport API from \"../api\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nfunction AdminDashboard() {\r\n  const [jobs, setJobs] = useState([]);\r\n  const [applications, setApplications] = useState([]);\r\n  const [showApplications, setShowApplications] = useState(false); // ✅ toggle state\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    description: \"\",\r\n    location: \"\",\r\n    salary: \"\",\r\n    status: \"Active\",\r\n  });\r\n  const [editId, setEditId] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  const fetchJobs = async () => {\r\n    try {\r\n      const res = await API.get(\"/jobs/\");\r\n      setJobs(res.data);\r\n    } catch (err) {\r\n      if (err.response?.status === 401) {\r\n        navigate(\"/login\");\r\n      }\r\n    }\r\n  };\r\n\r\n  const fetchApplications = async () => {\r\n    try {\r\n      const res = await API.get(\"/applications/all-applications/\");\r\n      console.log(\"Applications fetched:\", res.data.length);\r\n      console.log(\"Applications fetched:\", res.data); // ✅ log data\r\n      setApplications(res.data);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch applications:\", err);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchJobs();\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const payload = {\r\n      ...form,\r\n      salary: parseFloat(form.salary),\r\n    };\r\n\r\n    try {\r\n      if (editId) {\r\n        await API.put(`/jobs/${editId}/`, payload);\r\n        setEditId(null);\r\n      } else {\r\n        await API.post(\"/jobs/\", payload);\r\n      }\r\n      setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n      fetchJobs();\r\n    } catch (err) {\r\n      alert(editId ? \"Failed to update job\" : \"Failed to add job\");\r\n    }\r\n  };\r\n\r\n  const handleDelete = async (id) => {\r\n    try {\r\n      await API.delete(`/jobs/${id}`);\r\n      fetchJobs();\r\n    } catch (err) {\r\n      alert(\"Failed to delete job\");\r\n    }\r\n  };\r\n\r\n  const handleEdit = (job) => {\r\n    setEditId(job.id);\r\n    setForm({\r\n      title: job.title,\r\n      description: job.description,\r\n      location: job.location,\r\n      salary: job.salary,\r\n      status: job.status,\r\n    });\r\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\r\n  };\r\n\r\n  const handleCancelEdit = () => {\r\n    setEditId(null);\r\n    setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n  };\r\n\r\n  // const toggleApplications = async () => {\r\n  //   if (!showApplications) {\r\n  //     await fetchApplications();\r\n  //   }\r\n  //   setShowApplications(!showApplications);\r\n  // };\r\n\r\n  const toggleApplications = async () => {\r\n    const newShowState = !showApplications;\r\n    setShowApplications(newShowState);\r\n    if (newShowState) {\r\n      await fetchApplications(); // Always fetch latest when showing\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ padding: \"2rem\" }}>\r\n      <h2>Admin Dashboard</h2>\r\n\r\n      <h3>{editId ? \"Edit Job\" : \"Add Job\"}</h3>\r\n      <form onSubmit={handleSubmit} style={{ maxWidth: 600 }}>\r\n        <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\r\n        <br />\r\n        <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" required />\r\n        <br />\r\n        <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required />\r\n        <br />\r\n        <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary\" required />\r\n        <br />\r\n        <select name=\"status\" value={form.status} onChange={handleChange}>\r\n          <option value=\"Active\">Active</option>\r\n          <option value=\"Closed\">Closed</option>\r\n        </select>\r\n        <br />\r\n        <button type=\"submit\">{editId ? \"Update Job\" : \"Add Job\"}</button>\r\n        {editId && <button type=\"button\" onClick={handleCancelEdit}>Cancel</button>}\r\n      </form>\r\n\r\n      <h3>All Jobs</h3>\r\n      {jobs.map((job) => (\r\n        <div key={job.id} style={{ margin: \"1rem 0\", padding: \"1rem\", border: \"1px solid gray\" }}>\r\n          <h4>{job.title}</h4>\r\n          <p>{job.location} | ₹{job.salary}</p>\r\n          <p>{job.description}</p>\r\n          <p>Status: {job.status}</p>\r\n          <button onClick={() => handleEdit(job)}>Edit</button>\r\n          <button onClick={() => handleDelete(job.id)} style={{ marginLeft: \"1rem\" }}>Delete</button>\r\n        </div>\r\n      ))}\r\n\r\n      {/* Toggle Applications */}\r\n      <div style={{ marginTop: \"2rem\" }}>\r\n        <button onClick={toggleApplications}>\r\n          {showApplications ? \"Hide Applications\" : \"View Applications\"}\r\n        </button>\r\n      </div>\r\n\r\n      {/* Applications Table */}\r\n      {showApplications && (\r\n        <>\r\n          <h3 style={{ marginTop: \"1rem\" }}>User Applications</h3>\r\n          {applications.length === 0 ? (\r\n            <p>No applications found.</p>\r\n          ) : (\r\n            <table border=\"1\" cellPadding=\"10\" style={{ borderCollapse: \"collapse\", width: \"100%\", marginTop: \"1rem\" }}>\r\n              <thead>\r\n                <tr>\r\n                  <th>Job Title</th>\r\n                  <th>Applicant</th>\r\n                  <th>Email</th>\r\n                  <th>Status</th>\r\n                  <th>Applied On</th>\r\n                  <th>Resume</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {applications.map((app) => (\r\n                  <tr key={app.id}>\r\n                    <td>{app.job?.title || \"N/A\"}</td>\r\n                    <td>{app.name || \"Anonymous\"}</td>\r\n                    <td>{app.email || \"N/A\"}</td>\r\n                    <td>{app.status}</td>\r\n                    <td>\r\n                          {new Date(app.created_at).toLocaleString('en-IN', {\r\n                            year: 'numeric',\r\n                            month: 'short',\r\n                            day: 'numeric',\r\n                            hour: 'numeric',\r\n                            minute: '2-digit',\r\n                            hour12: true,\r\n                          })}\r\n                        </td>\r\n                    <td>\r\n                      {app.resume_url ? (\r\n                        <a href={app.resume_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                          View Resume\r\n                        </a>\r\n                      ) : (\r\n                        \"N/A\"\r\n                      )}\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          )}\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminDashboard;\r\n// working perfectly with editing jobs //\r\n// import React, { useEffect, useState } from \"react\";\r\n// import API from \"../api\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function AdminDashboard() {\r\n//   const [jobs, setJobs] = useState([]);\r\n//   const [form, setForm] = useState({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n//   const [editId, setEditId] = useState(null); // ✅ To track edit mode\r\n//   const navigate = useNavigate();\r\n\r\n//   const fetchJobs = async () => {\r\n//     try {\r\n//       const res = await API.get(\"/jobs/\");\r\n//       setJobs(res.data);\r\n//     } catch (err) {\r\n//       if (err.response?.status === 401) {\r\n//         navigate(\"/login\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     fetchJobs();\r\n//   }, []);\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleSubmit = async (e) => {\r\n//     e.preventDefault();\r\n//     const payload = {\r\n//       ...form,\r\n//       salary: parseFloat(form.salary),\r\n//     };\r\n\r\n//     try {\r\n//       if (editId) {\r\n//         // ✅ Edit mode\r\n//         await API.put(`/jobs/${editId}/`, payload);\r\n//         setEditId(null); // Exit edit mode\r\n//       } else {\r\n//         // ✅ Add mode\r\n//         await API.post(\"/jobs/\", payload);\r\n//       }\r\n//       setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(editId ? \"Failed to update job\" : \"Failed to add job\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await API.delete(`/jobs/${id}`);\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(\"Failed to delete job\");\r\n//     }\r\n//   };\r\n\r\n//   const handleEdit = (job) => {\r\n//     setEditId(job.id);\r\n//     setForm({\r\n//       title: job.title,\r\n//       description: job.description,\r\n//       location: job.location,\r\n//       salary: job.salary,\r\n//       status: job.status,\r\n//     });\r\n//     window.scrollTo({ top: 0, behavior: \"smooth\" }); // Optional: scroll to form\r\n//   };\r\n\r\n//   const handleCancelEdit = () => {\r\n//     setEditId(null);\r\n//     setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\" });\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"2rem\" }}>\r\n//       <h2>Admin Dashboard</h2>\r\n\r\n//       <h3>{editId ? \"Edit Job\" : \"Add Job\"}</h3>\r\n//       <form onSubmit={handleSubmit} style={{ maxWidth: 600 }}>\r\n//         <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\r\n//         <br />\r\n//         <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" required />\r\n//         <br />\r\n//         <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required />\r\n//         <br />\r\n//         <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary\" required />\r\n//         <br />\r\n//         <select name=\"status\" value={form.status} onChange={handleChange}>\r\n//           <option value=\"Active\">Active</option>\r\n//           <option value=\"Closed\">Closed</option>\r\n//         </select>\r\n//         <br />\r\n//         <button type=\"submit\">{editId ? \"Update Job\" : \"Add Job\"}</button>\r\n//         {editId && <button type=\"button\" onClick={handleCancelEdit}>Cancel</button>}\r\n//       </form>\r\n\r\n//       <h3>All Jobs</h3>\r\n//       {jobs.map((job) => (\r\n//         <div key={job.id} style={{ margin: \"1rem 0\", padding: \"1rem\", border: \"1px solid gray\" }}>\r\n//           <h4>{job.title}</h4>\r\n//           <p>{job.location} | ₹{job.salary}</p>\r\n//           <p>{job.description}</p>\r\n//           <p>Status: {job.status}</p>\r\n//           <button onClick={() => handleEdit(job)}>Edit</button>\r\n//           <button onClick={() => handleDelete(job.id)} style={{ marginLeft: \"1rem\" }}>Delete</button>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n\r\n\r\n\r\n// working coe //\r\n// import React, { useEffect, useState } from \"react\";\r\n// import API from \"../api\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// function AdminDashboard() {\r\n//   const [jobs, setJobs] = useState([]);\r\n//   const [form, setForm] = useState({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\"});\r\n//   const navigate = useNavigate();\r\n\r\n//   const fetchJobs = async () => {\r\n//     try {\r\n//       const res = await API.get(\"/jobs/\");\r\n//       setJobs(res.data);\r\n//     } catch (err) {\r\n//       if (err.response?.status === 401) {\r\n//         navigate(\"/login\");\r\n//       }\r\n//     }\r\n//   };\r\n\r\n// //   useEffect(() => {\r\n// //     fetchJobs();\r\n// //   }, []);\r\n\r\n// useEffect(() => {\r\n//   fetchJobs();\r\n// }, [fetchJobs]); // ✅ add fetchJobs here\r\n\r\n//   const handleChange = (e) => {\r\n//     setForm({ ...form, [e.target.name]: e.target.value });\r\n//   };\r\n\r\n//   const handleAddJob = async (e) => {\r\n//     e.preventDefault();\r\n\r\n//     const payload = {\r\n//       ...form,\r\n//       salary: parseFloat(form.salary), // 👈 Ensure salary is a float\r\n//     };\r\n//     console.log(\"Payload to backend:\", payload);\r\n//     try {\r\n//       await API.post(\"/jobs/\", payload);\r\n//       setForm({ title: \"\", description: \"\", location: \"\", salary: \"\", status: \"Active\"});\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(\"Failed to add job\");\r\n//     }\r\n//   };\r\n\r\n//   const handleDelete = async (id) => {\r\n//     try {\r\n//       await API.delete(`/jobs/${id}`);\r\n//       fetchJobs();\r\n//     } catch (err) {\r\n//       alert(\"Failed to delete job\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div style={{ padding: \"2rem\" }}>\r\n//       <h2>Admin Dashboard</h2>\r\n\r\n//       <h3>Add Job</h3>\r\n//       <form onSubmit={handleAddJob} style={{ maxWidth: 600 }}>\r\n//         <input name=\"title\" value={form.title} onChange={handleChange} placeholder=\"Title\" required />\r\n//         <br />\r\n//         <textarea name=\"description\" value={form.description} onChange={handleChange} placeholder=\"Description\" required />\r\n//         <br />\r\n//         <input name=\"location\" value={form.location} onChange={handleChange} placeholder=\"Location\" required />\r\n//         <br />\r\n//         <input type=\"number\" name=\"salary\" value={form.salary} onChange={handleChange} placeholder=\"Salary\" required />\r\n//         <br />\r\n//         <button type=\"submit\">Add Job</button>\r\n//       </form>\r\n\r\n//       <h3>All Jobs</h3>\r\n//       {jobs.map((job) => (\r\n//         <div key={job.id} style={{ margin: \"1rem 0\", padding: \"1rem\", border: \"1px solid gray\" }}>\r\n//           <h4>{job.title}</h4>\r\n//           <p>{job.location} | ₹{job.salary}</p>\r\n//           <p>{job.description}</p>\r\n//           <p>Status: {job.status}</p>\r\n//           <button onClick={() => handleDelete(job.id)}>Delete</button>\r\n//         </div>\r\n//       ))}\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default AdminDashboard;\r\n"],"mappings":"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":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}