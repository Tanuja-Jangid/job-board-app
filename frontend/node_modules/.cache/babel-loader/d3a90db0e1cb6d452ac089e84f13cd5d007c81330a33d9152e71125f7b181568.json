{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Downloads\\\\job-board-app\\\\frontend\\\\src\\\\pages\\\\UserLogin.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserLogin() {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const navigate = useNavigate();\n  const handleLogin = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post(\"http://localhost:8000/users/login\", {\n        email,\n        password\n      });\n      // âœ… Extract and store token properly\n      const token = response.data.access_token;\n      localStorage.setItem(\"token\", token);\n      console.log(\"ðŸªª Token stored:\", token);\n      alert(\"Login successful\");\n      navigate(\"/jobs\");\n    } catch (error) {\n      alert(\"Login failed: \" + error.response.data.detail);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleLogin,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"User Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      placeholder: \"Email\",\n      value: email,\n      onChange: e => setEmail(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      placeholder: \"Password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n// import { useState } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n\n// export default function UserLogin() {\n//   const [email, setEmail] = useState(\"\");\n//   const [password, setPassword] = useState(\"\");\n//   const navigate = useNavigate();\n\n//   const handleLogin = (e) => {\n//     e.preventDefault();\n\n//     // TODO: Replace with real API call\n//     if (email && password) {\n//       navigate(\"/jobs\");\n//     } else {\n//       alert(\"Invalid login\");\n//     }\n//   };\n\n//   return (\n//     <form onSubmit={handleLogin}>\n//       <h2>User Login</h2>\n//       <input\n//         type=\"email\"\n//         placeholder=\"Email\"\n//         value={email}\n//         onChange={(e) => setEmail(e.target.value)}\n//         required\n//       />\n//       <br /><br />\n//       <input\n//         type=\"password\"\n//         placeholder=\"Password\"\n//         value={password}\n//         onChange={(e) => setPassword(e.target.value)}\n//         required\n//       />\n//       <br /><br />\n//       <button type=\"submit\">Login</button>\n//     </form>\n//   );\n// }\n_s(UserLogin, \"rIjyA2uJXTJXGlQGcq/HSho2Mo8=\", false, function () {\n  return [useNavigate];\n});\n_c = UserLogin;\nvar _c;\n$RefreshReg$(_c, \"UserLogin\");","map":{"version":3,"names":["useState","axios","useNavigate","jsxDEV","_jsxDEV","UserLogin","_s","email","setEmail","password","setPassword","navigate","handleLogin","e","preventDefault","res","post","token","response","data","access_token","localStorage","setItem","console","log","alert","error","detail","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","target","required","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Downloads/job-board-app/frontend/src/pages/UserLogin.js"],"sourcesContent":["import { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nexport default function UserLogin() {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const navigate = useNavigate();\r\n\r\n  const handleLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post(\"http://localhost:8000/users/login\", {\r\n        email,\r\n        password,\r\n      });\r\n      // âœ… Extract and store token properly\r\n      const token = response.data.access_token;\r\n      localStorage.setItem(\"token\", token);\r\n      console.log(\"ðŸªª Token stored:\", token);\r\n      alert(\"Login successful\");\r\n      navigate(\"/jobs\");\r\n    } catch (error) {\r\n      alert(\"Login failed: \" + error.response.data.detail);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleLogin}>\r\n      <h2>User Login</h2>\r\n      <input type=\"email\" placeholder=\"Email\" value={email} onChange={(e) => setEmail(e.target.value)} required />\r\n      <br /><br />\r\n      <input type=\"password\" placeholder=\"Password\" value={password} onChange={(e) => setPassword(e.target.value)} required />\r\n      <br /><br />\r\n      <button type=\"submit\">Login</button>\r\n    </form>\r\n  );\r\n}\r\n\r\n\r\n// import { useState } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n\r\n// export default function UserLogin() {\r\n//   const [email, setEmail] = useState(\"\");\r\n//   const [password, setPassword] = useState(\"\");\r\n//   const navigate = useNavigate();\r\n\r\n//   const handleLogin = (e) => {\r\n//     e.preventDefault();\r\n\r\n//     // TODO: Replace with real API call\r\n//     if (email && password) {\r\n//       navigate(\"/jobs\");\r\n//     } else {\r\n//       alert(\"Invalid login\");\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <form onSubmit={handleLogin}>\r\n//       <h2>User Login</h2>\r\n//       <input\r\n//         type=\"email\"\r\n//         placeholder=\"Email\"\r\n//         value={email}\r\n//         onChange={(e) => setEmail(e.target.value)}\r\n//         required\r\n//       />\r\n//       <br /><br />\r\n//       <input\r\n//         type=\"password\"\r\n//         placeholder=\"Password\"\r\n//         value={password}\r\n//         onChange={(e) => setPassword(e.target.value)}\r\n//         required\r\n//       />\r\n//       <br /><br />\r\n//       <button type=\"submit\">Login</button>\r\n//     </form>\r\n//   );\r\n// }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}